{"version":3,"file":"index.modern.js","sources":["../src/betweener.js","../src/charkeys.js","../src/defined.js","../src/clipper.js","../src/hasAllKeys.js","../src/hasAllCharkeys.js","../src/randomInt.js","../src/rounder.js","../src/upto.js"],"sourcesContent":["const interval_regex = /(?<left>[[(])\\s*(?<left_num>[+-]?([0-9]+([.][0-9]*)?|([.][0-9]+)|∞))\\s*,\\s*(?<right_num>[+-]?([0-9]+([.][0-9]*)?|([.][0-9]+)|∞))\\s*(?<right>[)\\]])/;\n\nexport default function betweener (arg) {\n  if (arg.constructor === String) {\n    const match = arg.match(interval_regex);\n    if (!match) {\n      throw new Error('Invalid interval string');\n    }\n\n    const {left, left_num, right_num, right} = match.groups;\n    const map = {\n      '[': 'gte',\n      '(': 'gt',\n      ')': 'lt',\n      ']': 'lte'\n    };\n\n    const bounds = [left_num, right_num].map((num)=> {\n      if (num === '-∞') {\n        return -Infinity;\n      } else if (num === '∞') {\n        return Infinity;\n      } else {\n        return parseFloat(num);\n      }\n    });\n\n    arg = {\n      [map[left]]: bounds[0],\n      [map[right]]: bounds[1]\n    };\n  }\n\n  const {lt, lte, gt, gte} = arg;\n\n  return function between (value) {\n    // left side\n    if (gt && (value <= gt)) {\n      return false;\n    }\n    if (gte && (value < gte)) {\n      return false;\n    }\n\n    // right side\n    if (lt && (value >= lt)) {\n      return false;\n    }\n    if (lte && (value > lte)) {\n      return false;\n    }\n\n    return true;\n  };\n}\n","export default function charkeys (obj) {\n  return Object.entries(obj).reduce((singled, [key, val])=> {\n    const k = key[0];\n    singled[k] = val;\n    return singled;\n  }, {});\n}\n","export default function defined (val) {\n  return (typeof val !== 'undefined');\n}\n","import defined from './defined';\n\nexport default function clipper ({min, max}) {\n  return function clip (value) {\n    if (defined(min) && (value < min)) {\n      value = min;\n    }\n    if (defined(max) && (value > max)) {\n      value = max;\n    }\n    return value;\n  };\n}\n","export default function hasAllKeys (keys) {\n  return function hasAll (obj) {\n    return keys.every((key)=> {\n      return Object.prototype.hasOwnProperty.call(obj, key);\n    });\n  };\n}\n","import charkeys from './charkeys';\nimport hasAllKeys from './hasAllKeys';\n\nexport default function hasAllCharkeys (keys) {\n  return function has (obj) {\n    obj = charkeys(obj);\n    return hasAllKeys(keys)(obj);\n  };\n}\n","export default function randomInt ({min = 0, max = 1} = {}) {\n  const {isInteger} = Number;\n  if (!isInteger(min) || !isInteger(max)) {\n    throw new Error('min and max must be integers');\n  }\n  if (max < min) {\n    throw new Error('min must be less than or equal to max');\n  }\n  const delta = max - min;\n  const offset = Math.floor(Math.random() * (delta + 1));\n  return min + offset;\n}\n","export default function rounder ({decimals = 0, op = Math.round} = {}) {\n  if (!(Number.isInteger(decimals) && (decimals >= 0))) {\n    throw new Error('Argument decimals must be non-negative integer');\n  }\n\n  if (!(op && (op.constructor === Function))) {\n    throw new Error('Argument op must be a function');\n  }\n\n  const multiplier = 10 ** decimals;\n  return function round (num) {\n    return op(num * multiplier) / multiplier;\n  };\n}\n","/// iterable that returns array or function\n\nexport default function upto (n) {\n  let i = 0;\n  const results = [];\n  return function f (fn) {\n    while (i <= n) {\n      results.push(fn(i));\n      i++;\n    }\n    return results;\n  };\n}\n"],"names":["interval_regex","betweener","arg","constructor","String","match","Error","left","left_num","right_num","right","groups","map","bounds","num","Infinity","parseFloat","lt","lte","gt","gte","between","value","charkeys","obj","Object","entries","reduce","singled","key","val","k","defined","clipper","min","max","clip","hasAllKeys","keys","hasAll","every","prototype","hasOwnProperty","call","hasAllCharkeys","has","randomInt","isInteger","Number","delta","offset","Math","floor","random","rounder","decimals","op","round","Function","multiplier","upto","n","i","results","f","fn","push"],"mappings":"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"}